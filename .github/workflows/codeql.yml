name: "CodeQL"

on:
  push:
    branches: [ "main", "dev", "feature/*" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master", "dev" ]
  schedule:
    # - cron: '15 0 * * 0'
    - cron: '42 13 * * 6'

jobs:
  analyze:
    name: Analyze on ${{ matrix.os }} with ${{ matrix.language }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        language: [ 'csharp', 'javascript-typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Run Backend Build Script on Linux
      shell: bash
      run: scripts/Ezenity.API.Buildscript.sh
      if: matrix.os == 'ubuntu-latest' && matrix.language == 'csharp'
      
    - name: Run Backend Build Script on Windows
      if: matrix.os == 'windows-latest' && matrix.language == 'csharp'
      run: scripts/Ezenity.API.Buildscript.bat
    
    - name: Run Frontend Build Script on Linux
      shell: bash
      run: scripts/Ezenity_Frontend.Buildscript.sh
      if: matrix.os == 'ubuntu-latest' && matrix.language == 'javascript-typescript'

    - name: Run Frontend Build Script on Windows
      if: matrix.os == 'windows-latest' && matrix.language == 'javascript-typescript'
      run: scripts/Ezenity_Frontend.Buildscript.bat

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
